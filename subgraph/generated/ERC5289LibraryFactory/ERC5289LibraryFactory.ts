// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LibraryCreated extends ethereum.Event {
  get params(): LibraryCreated__Params {
    return new LibraryCreated__Params(this);
  }
}

export class LibraryCreated__Params {
  _event: LibraryCreated;

  constructor(event: LibraryCreated) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get libraryAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ERC5289LibraryFactory extends ethereum.SmartContract {
  static bind(address: Address): ERC5289LibraryFactory {
    return new ERC5289LibraryFactory("ERC5289LibraryFactory", address);
  }

  getLibraries(wallet: Address): Array<Address> {
    let result = super.call(
      "getLibraries",
      "getLibraries(address):(address[])",
      [ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toAddressArray();
  }

  try_getLibraries(wallet: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getLibraries",
      "getLibraries(address):(address[])",
      [ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getLibrary(wallet: Address, index: BigInt): Address {
    let result = super.call(
      "getLibrary",
      "getLibrary(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(wallet),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getLibrary(wallet: Address, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getLibrary",
      "getLibrary(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(wallet),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateLibraryCall extends ethereum.Call {
  get inputs(): CreateLibraryCall__Inputs {
    return new CreateLibraryCall__Inputs(this);
  }

  get outputs(): CreateLibraryCall__Outputs {
    return new CreateLibraryCall__Outputs(this);
  }
}

export class CreateLibraryCall__Inputs {
  _call: CreateLibraryCall;

  constructor(call: CreateLibraryCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateLibraryCall__Outputs {
  _call: CreateLibraryCall;

  constructor(call: CreateLibraryCall) {
    this._call = call;
  }
}
